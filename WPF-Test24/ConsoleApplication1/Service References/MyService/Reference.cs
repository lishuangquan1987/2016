//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.MyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysFile", Namespace="http://schemas.datacontract.org/2004/07/GDJL.MTST.Model", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class SysFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyService.ISysUpDateService")]
    public interface ISysUpDateService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysUpDateService/CheckUpDate", ReplyAction="http://tempuri.org/ISysUpDateService/CheckUpDateResponse")]
        ConsoleApplication1.MyService.CheckUpDateResponse CheckUpDate(ConsoleApplication1.MyService.CheckUpDateRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysUpDateService/CheckUpDate", ReplyAction="http://tempuri.org/ISysUpDateService/CheckUpDateResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.MyService.CheckUpDateResponse> CheckUpDateAsync(ConsoleApplication1.MyService.CheckUpDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysUpDateService/GetLatestFileNames", ReplyAction="http://tempuri.org/ISysUpDateService/GetLatestFileNamesResponse")]
        string[] GetLatestFileNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysUpDateService/GetLatestFileNames", ReplyAction="http://tempuri.org/ISysUpDateService/GetLatestFileNamesResponse")]
        System.Threading.Tasks.Task<string[]> GetLatestFileNamesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysUpDateService/GetLastestFile", ReplyAction="http://tempuri.org/ISysUpDateService/GetLastestFileResponse")]
        ConsoleApplication1.MyService.GetLastestFileResponse GetLastestFile(ConsoleApplication1.MyService.GetLastestFileRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysUpDateService/GetLastestFile", ReplyAction="http://tempuri.org/ISysUpDateService/GetLastestFileResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.MyService.GetLastestFileResponse> GetLastestFileAsync(ConsoleApplication1.MyService.GetLastestFileRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckUpDate", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckUpDateRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ClientVersion;
        
        public CheckUpDateRequest() {
        }
        
        public CheckUpDateRequest(string ClientVersion) {
            this.ClientVersion = ClientVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckUpDateResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class CheckUpDateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool CheckUpDateResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string msg;
        
        public CheckUpDateResponse() {
        }
        
        public CheckUpDateResponse(bool CheckUpDateResult, string msg) {
            this.CheckUpDateResult = CheckUpDateResult;
            this.msg = msg;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastestFile", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastestFileRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string fileName;
        
        public GetLastestFileRequest() {
        }
        
        public GetLastestFileRequest(string fileName) {
            this.fileName = fileName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLastestFileResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetLastestFileResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ConsoleApplication1.MyService.SysFile GetLastestFileResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string msg;
        
        public GetLastestFileResponse() {
        }
        
        public GetLastestFileResponse(ConsoleApplication1.MyService.SysFile GetLastestFileResult, string msg) {
            this.GetLastestFileResult = GetLastestFileResult;
            this.msg = msg;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISysUpDateServiceChannel : ConsoleApplication1.MyService.ISysUpDateService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SysUpDateServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.MyService.ISysUpDateService>, ConsoleApplication1.MyService.ISysUpDateService {
        
        public SysUpDateServiceClient() {
        }
        
        public SysUpDateServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SysUpDateServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SysUpDateServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SysUpDateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConsoleApplication1.MyService.CheckUpDateResponse ConsoleApplication1.MyService.ISysUpDateService.CheckUpDate(ConsoleApplication1.MyService.CheckUpDateRequest request) {
            return base.Channel.CheckUpDate(request);
        }
        
        public bool CheckUpDate(string ClientVersion, out string msg) {
            ConsoleApplication1.MyService.CheckUpDateRequest inValue = new ConsoleApplication1.MyService.CheckUpDateRequest();
            inValue.ClientVersion = ClientVersion;
            ConsoleApplication1.MyService.CheckUpDateResponse retVal = ((ConsoleApplication1.MyService.ISysUpDateService)(this)).CheckUpDate(inValue);
            msg = retVal.msg;
            return retVal.CheckUpDateResult;
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.MyService.CheckUpDateResponse> CheckUpDateAsync(ConsoleApplication1.MyService.CheckUpDateRequest request) {
            return base.Channel.CheckUpDateAsync(request);
        }
        
        public string[] GetLatestFileNames() {
            return base.Channel.GetLatestFileNames();
        }
        
        public System.Threading.Tasks.Task<string[]> GetLatestFileNamesAsync() {
            return base.Channel.GetLatestFileNamesAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConsoleApplication1.MyService.GetLastestFileResponse ConsoleApplication1.MyService.ISysUpDateService.GetLastestFile(ConsoleApplication1.MyService.GetLastestFileRequest request) {
            return base.Channel.GetLastestFile(request);
        }
        
        public ConsoleApplication1.MyService.SysFile GetLastestFile(string fileName, out string msg) {
            ConsoleApplication1.MyService.GetLastestFileRequest inValue = new ConsoleApplication1.MyService.GetLastestFileRequest();
            inValue.fileName = fileName;
            ConsoleApplication1.MyService.GetLastestFileResponse retVal = ((ConsoleApplication1.MyService.ISysUpDateService)(this)).GetLastestFile(inValue);
            msg = retVal.msg;
            return retVal.GetLastestFileResult;
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.MyService.GetLastestFileResponse> GetLastestFileAsync(ConsoleApplication1.MyService.GetLastestFileRequest request) {
            return base.Channel.GetLastestFileAsync(request);
        }
    }
}
